{
  "_args": [
    [
      "p",
      "/home/ersiklaszlo/Asztal/insta-express-vue/server"
    ]
  ],
  "_defaultsLoaded": true,
  "_engineSupported": true,
  "_from": "p@latest",
  "_id": "p@0.2.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/p",
  "_nodeVersion": "v0.6.7",
  "_npmUser": {
    "email": "nunojobpinto@gmail.com",
    "name": "dscape"
  },
  "_npmVersion": "1.1.0-2",
  "_phantomChildren": {},
  "_requested": {
    "name": "p",
    "raw": "p",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/p/-/p-0.2.0.tgz",
  "_shasum": "46a8e8a63beca00ebf6638248621e8a09cb24a7b",
  "_shrinkwrap": null,
  "_spec": "p",
  "_where": "/home/ersiklaszlo/Asztal/insta-express-vue/server",
  "author": {
    "email": "nunojobpinto@gmail.com",
    "name": "nuno job",
    "url": "http://nunojob.com/"
  },
  "bugs": {
    "url": "http://github.com/dscape/p/issues"
  },
  "dependencies": {},
  "description": "pattern matching in javascript for asyncronous iteration",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "46a8e8a63beca00ebf6638248621e8a09cb24a7b",
    "tarball": "https://registry.npmjs.org/p/-/p-0.2.0.tgz"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "homepage": "https://github.com/dscape/p",
  "keywords": [
    "async",
    "flow",
    "pattern",
    "pattern matching"
  ],
  "main": "./pattern.js",
  "maintainers": [
    {
      "name": "dscape",
      "email": "nunojobpinto@gmail.com"
    }
  ],
  "name": "p",
  "optionalDependencies": {},
  "readme": "<a name=\"pattern\"/>\n# pattern\n\n`pattern` is a way to do pattern matching in javascript that helps you do asynchronous iterations\n\n``` js\n// check `samples/nodetuts.js` for working code\ninsert_all([], function () { console.log('done'); });\ninsert_all(_, function (l) {\n  insert_element(l.shift(), function (elem) {\n    console.log('â€£ ', elem);\n    insert_all(l);\n  });\n});\n\ninsert_all([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n```\n\nthe first pattern in `pattern` sets the arity of the function to execute\n\n``` js\n// first call sets arity #1\n// when this condition is met it logs the message done\ninsert_all([], function () { console.log('done'); });\n```\n\nthen we normally register the iteration pattern:\n\n``` js\n// var _; was set in the top, value is undefined\ninsert_all(_, function (l) {\n```\n\nif you then call `insert_all` where the argument count matches arity, `pattern` knows its time to execute\n\n``` js\n// one argument, arity #1\n// run forest, run\ninsert_all([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n```\n\n[this] is the code you would normally write to do the same thing in javascript\n\n<a name=\"installation\"/>\n# installation\n\n<a name=\"node\"/>\n## node.js\n\n1. install [npm]\n2. `npm install p`\n3. `var p = require('p');`\n\n<a name=\"samples\"/>\n# samples\n\nthere are samples in the `samples` directory. check them out\n\n<a name=\"disclaimer\"/>\n# disclaimer\n\nif you are not familiar with `haskell` and you love your javascript object oriented code you better look away right now. this pretty much breaks everything you love and care about in javascript\n\n`pattern` was made so i could learn some more javascript. it's slow, and certainly not web scale\n\nthis software does not obey laws, common best practices, or even common sense\n\nit does everything that is wrong in javascript; or at least attempts to (suggestions are welcome)\n\ni'll probably still use it anyway\n\n<a name=\"roadmap\"/>\n# roadmap\n\n[pointfree] style (**note** i'm just kidding)\n\n<a name=\"contribute\"/>\n# contribute\n\neveryone is welcome to contribute. patches, bug-fixes, new features\n\n1. create an [issue][issues] so the community can comment on your idea\n2. fork `pattern`\n3. create a new branch `git checkout -b feature_name`\n4. create tests for the changes you made\n5. make sure you pass both existing and newly inserted tests\n6. commit your changes\n7. push to your branch `git push origin feature_name`\n8. create an pull request\n\n<a name=\"meta\"/>\n# meta\n\n* code: `git clone git://github.com/dscape/p.git`\n* home: <http://github.com/dscape/p>\n* bugs: <http://github.com/dscape/p/issues>\n* build: [![build status](https://secure.travis-ci.org/dscape/p.png)](http://travis-ci.org/dscape/pattern)\n\n`(oO)--',-` in [caos]\n\n<a name=\"license\"/>\n# license\n\ncopyright 2012 nuno job <nunojob.com> `(oO)--',--`\n\nlicensed under the apache license, version 2.0 (the \"license\");\nyou may not use this file except in compliance with the license.\nyou may obtain a copy of the license at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nunless required by applicable law or agreed to in writing, software\ndistributed under the license is distributed on an \"as is\" basis,\nwithout warranties or conditions of any kind, either express or implied.\nsee the license for the specific language governing permissions and\nlimitations under the license\n\n[npm]: http://npmjs.org\n[issues]: http://github.com/dscape/p/issues\n[caos]: http://caos.di.uminho.pt/\n[samples]: https://github.com/dscape/p/tree/master/samples\n[this]: https://gist.github.com/00663e475092e55ac66c#file_howitis.js\n[pointfree]: http://www.haskell.org/haskellwiki/Pointfree\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/dscape/p.git"
  },
  "scripts": {
    "test": "node test"
  },
  "version": "0.2.0"
}
